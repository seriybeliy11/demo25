wget http://ftp.ru.debian.org/debian/pool/main/p/putty/putty_0.78-2+deb12u2_amd64.deb
wget http://ftp.ru.debian.org/debian/pool/main/p/putty/putty-tools_0.78-2+deb12u2_amd64.deb
sudo dpkg -i putty-tools_0.78-2+deb12u2_amd64.deb putty_0.78-2+deb12u2_amd64.deb

lsblk
sudo mount /dev/(sdb1) /mnt
ls /mnt
cp /mnt/astra.iso /home/(sshuser)
ls
sudo mount -t iso9660 -o loop /home/astra.iso /media/cdrom0
ls /media/cdrom0
lsblk
sudo apt update
sudo apt install network-manager
Проверить соединение и ip
nmcli connection show
ip -br a
Переименовать "Проводное подключение 1" в имя сетевого адаптера и перезапустить соединение:
nmcli connection modify 'Проводное подключение 1' con-name enp1s0
nmcli connection up enp1s0

sudo useradd sshuser -m -u 1010 -U -s /bin/bash
sudo passwd sshuser
P@ssw0rd
sudo usermod -aG astra-admin sshuser
sudo pdpl-user -i 63 sshuser
nano /etc/sudoers:
sshuser ALL=(ALL:ALL) NOPASSWD: ALL
Выполнить вход под пользователем sshuser
sudo astra-sudo-control disable
sudo -i
на серверах
Установить ssh сервер (если не стоял)
sudo apt install openssh-server
sudo nano /etc/ssh/sshd_config
Port 2024
MaxAuthTries 2
IgnoreRhosts yes
PermitRootLogin no
HostbasedAuthentication no
PasswordAuthentication yes
UsePrivilegeSeparation yes
Banner /etc/ssh/bannermotd
Match User sshuser
AllowUsers  sshuser
nano /etc/ssh/bannermotd
Authorized access only
sudo systemctl restart ssh sshd

*sudo apt install -y openssh-server openssh-client
sudo adduser admin
Потом переходим на второй сервер и 
пробуем подключиться по ssh к первому 
ssh admin@<ip первого компа>
Как только зашли пишем exit и пишем команды: 
ssh-keygen (тут надо будет найти 
"your public key has been saved in ..." и 
вставить путь в команду ниже) ssh-copy-id -i 
<путь из паблик кей> <пользователь>@<ip первого компа>
Потом так же повторяем со второго сервера на первый!*

Базовая настройка первого интерфейса 
(смотрит в интернет) 
1) configure
2) interface gigabitethernet 1/0/1
3) no switchport access vlan
4) mode routerport
5) ip address dhcp
6) ip firewall disable
000)  do commit & do confirm
@@@@@@@@@@@@@@@@@@@@@@@ Базовая настройка второго интерфейса 
(смотрит на микрот1) 
1) interface gigabitethernet 1/0/2
2)  mode routerport
3) ip address 172.16.4.1/28 (согласно схеме)
exit
@@@@@@@@@@@@@@@@@@@@ Базовая настройка третьего интерфейса 
(смотрит на микрот2) 
1) interface gigabitethernet 1/0/3
2) mode routerport
3) ip address 172.16.5.1/28
000)  do commit & do confirm
@@@@@@@@@@@@@@@@@@@@@@ Настройка нат и доступа в интернет 
1) domain lookup enable
2) domain name-server 8.8.8.8
3) nat source
4) ruleset first (название не важно)
5) to interface gigabitethernet 1/0/1 (Который в инет) 
6) rule 11 (номер не важен)
7) match source-address any
8) action source-nat interface
9) enable
10) exit (несколько раз)
Далее полученный адрес от сириуса ищем через команду:
11) do sh ip interfaces
IP address            Interface    Admin   Link    Type      Precedence
---------------------------------------------------   --------------------   -----   
10.23.68.70/23        gi1/0/1      Up      Up      DHCP      -- (подходит)
172.16.4.1/28         gi1/0/2      Up      Up      static    primary
172.16.5.1/28         gi1/0/3      Up      Up      static    primaryx
192.168.1.1/24        br1          Up      Up      static    primary
10.23.68.54/23        br2          Up      Down    DHCP      --(подходит,но линк Down)
12) ip route 0.0.0.0/0 10.23.68.1 (укзаываем адрес шлюза из пола)
000)  do commit & do confirm
@@@@@@@@@@@@@ OSPF @@@@@@@@@@@@@@
1) router ospf 1
2) router-id 1.1.1.1
3) area 0.0.0.0
4) network 172.16.4.0/28 (Сеть на первый микрот)
5) network 172.16.5.0/28 (Сеть на второй микрот)
6)(config-ospf-area) enable
7) exit
8) (config-ospf) enable
000)  do commit & do confirm
@@@@@@@@@@@@@@@@@@@@@@@@@ OSPF neighbors @@
1) interface gigabitethernet 1/0/2
2) ip firewall disable
3) ip ospf instance 1
4) ip ospf network point-to-point
5) ip ospf
__________________Настроили для первого
1) interface gigabitethernet 1/0/3
2) ip firewall disable
3) ip ospf instance 1
4) ip ospf network point-to-point
5) ip ospf
________________Настроили для второго
000)  do commit & do confirm

Настройка микротика 1 @@@@@
1) system identity set name=First-RTR
2) ip address add address=172.16.4.2/28 interface=ether1
3) ip route add dst-address=0.0.0.0/0 gateway=172.16.4.1
@@@@@@@@@@ Настройка OSPF на микротике 1 @@@@@@
1) routing ospf instance add name=OSPF1 router-id=2.2.2.2 
(ID указываем в виде айпишника, уникальный в каждом сетевом оборудовании)
2) routing ospf network add network=172.16.4.0/28 area=backbone
3) routing ospf interface add interface=ether1 network-type=point-to-point
4) ip firewall filter print (отключаем правило)
 5    ;;; defconf: drop all not coming from LAN
      chain=input action=drop in-interface-list=!LAN
5) ip firewall filter disable numbers=5
@@@@@@@@@@@ Настройка DHCP и статики @@@@@@@
1) interface bridge port print
2) interface bridge port remove numbers=0 (удаляем eth2)
3) interface bridge port remove numbers=0 
(удаляем eth3 по умолчанию они закрыты в бридж)
4)  ip address add address=192.168.10.1/26 interface=ether2
5) ip address add address=192.168.20.1/28 interface=ether3
6) ip pool add name=dhcp-pool ranges=192.168.2.2-192.168.2.14
7) ip dhcp-server add address-pool=dhcp-pool 
interface=ether3 disabled=no name=local-dhcp
8) ip dhcp-server network add address=192.168.20.0/28 
gateway=192.168.20.1 dns-server=8.8.8.8,1.1.1.1

mikrot
/system clock set date=2022-01-01 time=12:00:00
# Устанавливаем часовой пояс для Москвы
/system clock set time-zone-name=Europe/Moscow
/system ntp client set enabled=yes
/system ntp client set primary-ntp=217.160.0.1 secondary-ntp=193.204.114.232
/system clock print
/system ntp client print
217.170.87.229
ru.pool.ntp.org
eltex
clock timezone MSK +3
ntp client enable
ntp server 217.160.0.1
ntp server 193.204.114.232
ntp server pool.ntp.org
ntp server ru.pool.ntp.org
show clock
show ntp status
*nano /etc/selinux/config
SELINUX=permissive
setenforce 0*
SRV
sudo apt update
sudo apt install chrony
sudo nano /etc/chrony/chrony.conf
# Найти строки pool или server, закомментировать или удалить
pool pool.ntp.org iburst
pool ru.pool.ntp.org iburst
sudo systemctl restart chrony
sudo systemctl status chrony
chronyc sources
chronyc tracking
date

sudo dpkg -i file.deb
sudo apt --fix-broken install
yandex-browser-enterprise

sudo apt update
sudo apt install cups
sudo nano /etc/cups/cupsd.conf
 <Location />
   Order allow,deny
+  Allow localhost
+  Allow 192.168.164.0/24 # Разрешаем доступ из вашей сети
 </Location>
ServerName 192.168.164.128
sudo systemctl restart cups
sudo systemctl enable cups
sudo usermod -aG lpadmin sshuser
sudo lpstat -p -d
sudo nano /etc/apt/sources.list
sudo apt update
sudo apt install cups-pdf
sudo systemctl restart cups
подключение cups-pdf:/
имя  "Виртуальный PDF-принтер"
Generic
Generic CUPS-PDF Printer (w/ options) (en)
Перейдите в раздел "Printers".
Найдите добавленный сетевой принтер (например, "PDF-принтер_с_сервера").
В выпадающем меню "Administration" (или аналогичном) рядом 
с принтером выберите Set As Default (Установить как по умолчанию).

curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh ./get-docker.sh
docker -v
docker compose versioncd 
/opt
mkdir twnextcloud
cd twnextcloud
nano docker-compose.yml
docker compose pull
docker compose up
http://ip-сервера:8081

curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh ./get-docker.sh
docker -v 
docker compose version 
sudo apt install docker-ce docker-ce-cli 
sudo systemctl enable docker --now
sudo nano wiki.yml
cd /home/sshuser
ls
sudo docker volume create dbvolume
sudo docker volume ls
sudo apt install docker-compose -y 
sudo docker-compose -f wiki.yml up -d 
хост mariadb
имя БД mediawiki
имя пользователя wiki
пароль из yml
demo-wiki
администратор wiki
sudo find LocalSettings.php 
(scp -P 2024 /home/user/Загрузки/LocalSettings.php sshuser@192.168.200.2:/home/sshuser)
sudo mkdir /mnt/usb_flash 
sudo mount /dev/sdc1 /mnt/usb_flash 
cd /mnt/usb_flash/ 
sshuser@2SRV:/mnt/usb_flash$ ls 
sshuser@2SRV:/mnt/usb_flash$ cp /mnt/usb_flash/LocalSettings.php /home/sshuser/ 
cd /home/sshuser
ls 
sudo docker volume inspect sshuser_images 
sudo cp ./LocalSettings.php /var/lib/docker/volumes/sshuser_images/_data/LocalSettings.php 
sudo nano wiki.yml 
sudo docker-compose -f wiki.yml stop 
sudo docker-compose -f wiki.yml up -d 

curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh ./get-docker.sh
sudo apt install docker-compose -y
mkdir moodle_docker
cd moodle_docker
nano docker-compose.yml
docker-compose up -d
docker-compose ps
http://<IP_First-SRV>:8080
admin
пароль your_moodle_admin_password

Предположим, IP-адрес Second-SRV в локальной сети, подключенной к Second-RTR 192.168.164.129. 
Внешний интерфейс на Second-RTR называется ether1-wan.
Команда в терминале MikroTik на Second-RTR:
/ip firewall nat add chain=dstnat protocol=tcp dst-port=80 
in-interface=ether1-wan action=dst-nat to-addresses=192.168.164.129 to-ports=8080 
comment="Wiki service port forward"

Предположим, IP-адрес Second-SRV 192.168.164.129. Внешний интерфейс на Second-RTR - ether1-wan.
Команда в терминале MikroTik на Second-RTR:
/ip firewall nat add chain=dstnat protocol=tcp dst-port=2024 
in-interface=ether1-wan action=dst-nat to-addresses=192.168.164.129 to-ports=2024 
comment="SSH to Second-SRV port forward"

Предположим, IP-адрес First-SRV в локальной сети, подключенной к First-RTR, равен 192.168.1.10 (пример). 
Внешний интерфейс на First-RTR называется ether1-wan.
Команда в терминале MikroTik на First-RTR:
/ip firewall nat add chain=dstnat protocol=tcp dst-port=2024 
in-interface=ether1-wan action=dst-nat to-addresses=192.168.1.10 to-ports=2024 
comment="SSH to First-SRV port forward"

/interface print
/ip address print
/ip route print

На 2-RTR открываем на редактирование файл /etc/nftables/2-rtr.nft
nano /etc/nftables/bt-rtr.nft
table inet nat {
	chain PREROUTING {
	type nat hook prerouting priority filter;
	ip daddr 172.16.5.2 tcp dport 80 dnat ip to 192.168.200.2:8080
	}
	chain POSTROUTING {
	type nat hook postrouting priority srcnat;
	oifname 'ensl8' masquerade
	}
}
С HQ-CLI в браузере переходим по IP адресу (WAN) BR-RTR должны попасть на страницу MediaWiki
http://172.16.5.2

На 1-RTR открываем на редактирование файл /etc/nftables/1-rtr.nft
nano /etc/nftables/1-rtr.nft
table inet nat {
	chain PREROUTING {
	type nat hook prerouting priority filter;
	ip daddr 172.16.4.2 tcp dport 2024 dnat ip to 132.168.100.2:2024
	}
	chain POSTROUTING {
	type nat hook postrouting priority srcnat;
	oifname "ensl8" masquerade
	}
}
С HQ-CLI подключаемся по ssh к 1-RTR по порту 2024
ssh sshuser@172.16.4.2 -p 2024
Должны попасть на 1-SRV

На 2-RTR открываем на редактирование файл /etc/nftables/2-rtr.nft
nano /etc/nftables/2-rtr.nft
table inet nat {
	chain PREROUTING {
	type nat hook prerouting priority filter;
	ip daddr 172.16.5.2 tcp dport 80 dnat ip to 192.168.200.2:8080
	ip daddr 172.16.5.2 tcp dport 2024 dnat ip to 192.168.200.2:2024
	}
	chain POSTROUTING {
	type nat hook postrouting priority srenat;
	oifname ”ensl8” masquerade
	}
}
С HQ-CLI подключаемся по ssh к 2-RTR по порту 2024
ssh sshuser@172.16.5.2 -p 2024
Должны попасть на 2-SRV 

lsblk
sudo fdisk /dev/sdb
В утилите fdisk:
Нажмите n (new) для создания нового раздела.
Нажмите p (primary) или e (extended) - обычно primary.
Выберите номер раздела (1, 2, 3...).
Укажите первый и последний секторы (или размер). 
Используйте значения по умолчанию, если хотите использовать 
все доступное пространство на диске/в оставшемся пространстве.
Нажмите w (write) для сохранения изменений и выхода.
Отформатируйте раздел: Отформатируйте созданный раздел в ext4. 
Убедитесь, что используете правильное имя нового раздела (например, /dev/sdb1).
sudo mkfs.ext4 /dev/sdb1
sudo mkdir /srv/nfs
sudo blkid /dev/sdb1
Скопируйте UUID.
Настройте автоматическое монтирование раздела при загрузке: 
Отредактируйте файл /etc/fstab для автоматического монтирования раздела.
sudo nano /etc/fstab
Добавьте строку в конец файла, используя UUID:
UUID=ВАШ_UUID /srv/nfs ext4 defaults 0 2
(Замените ВАШ_UUID на UUID, который вы получили командой blkid).
Сохраните изменения и закройте редактор.
Смонтируйте раздел: Смонтируйте новый раздел.
sudo mount -a
Проверьте, что раздел смонтирован правильно:
df -h
Вы должны увидеть /dev/sdb1 (или как там называется ваш раздел) 
смонтированным в /srv/nfs.
Настройте права доступа (опционально, но полезно): 
Убедитесь, что у пользователя, от имени которого будет работать NFS, 
есть необходимые права на запись в /srv/nfs. Часто удобно изменить владельца или группу:
sudo chown nobody:nogroup /srv/nfs
sudo chmod 777 /srv/nfs

